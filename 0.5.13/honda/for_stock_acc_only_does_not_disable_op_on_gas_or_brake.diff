# cd /data/openpilot && curl https://raw.githubusercontent.com/eFiniLan/openpilot-patches/master/0.5.13/honda/for_stock_acc_only_does_not_disable_op_on_gas_or_brake.diff | git apply -v
#
# (Suitable for Stock ACC)
# This patch will keep OP engaged when gas or brake is pressed.
# When gas or brake is pressed by driver, OP will send 0 to gas AND brake
# so it should not have any conflict between OP and user
# (e.g. user wants accelerate but OP wants brake)
#
===================================================================
--- a/selfdrive/car/honda/carcontroller.py
+++ b/selfdrive/car/honda/carcontroller.py
@@ -168,6 +168,10 @@
       if (frame % 2) == 0:
         idx = frame // 2
         pump_on, self.last_pump_ts = brake_pump_hysteresis(apply_brake, self.apply_brake_last, self.last_pump_ts)
+        # if brake or gas is pressed, we do not send any gas and brake to the car
+        if CS.brake_pressed > 0 or CS.user_gas > 0:
+          apply_brake = 0
+          apply_gas = 0
         can_sends.append(hondacan.create_brake_command(self.packer, apply_brake, pump_on,
           pcm_override, pcm_cancel_cmd, hud.chime, hud.fcw, idx))
         self.apply_brake_last = apply_brake
===================================================================
--- a/selfdrive/car/honda/interface.py
+++ b/selfdrive/car/honda/interface.py
@@ -539,12 +539,12 @@
       events.append(create_event('speedTooLow', [ET.NO_ENTRY]))

     # disable on pedals rising edge or when brake is pressed and speed isn't zero
-    if (ret.gasPressed and not self.gas_pressed_prev) or \
-       (ret.brakePressed and (not self.brake_pressed_prev or ret.vEgo > 0.001)):
-      events.append(create_event('pedalPressed', [ET.NO_ENTRY, ET.USER_DISABLE]))
-
-    if ret.gasPressed:
-      events.append(create_event('pedalPressed', [ET.PRE_ENABLE]))
+    # if (ret.gasPressed and not self.gas_pressed_prev) or \
+    #    (ret.brakePressed and (not self.brake_pressed_prev or ret.vEgo > 0.001)):
+    #   events.append(create_event('pedalPressed', [ET.NO_ENTRY, ET.USER_DISABLE]))
+    #
+    # if ret.gasPressed:
+    #   events.append(create_event('pedalPressed', [ET.PRE_ENABLE]))

     # it can happen that car cruise disables while comma system is enabled: need to
     # keep braking if needed or if the speed is very low
